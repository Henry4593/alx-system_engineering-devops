#!/usr/bin/env bash

# Script to Install and Configure HAProxy Load Balancer

## Update and Perform System Checks (Quiet Mode)
echo -e "Updating package lists and performing preliminary checks...\n"

## Function to Install Packages (Quiet Mode)
function install() {
  # Check if package is already installed (suppress output)
  if ! command -v "$1" &> /dev/null; then
    echo -e "  Installing: $1 (quiet mode)"
    sudo apt-get update -y -qq && sudo apt-get install -y "$1" -qq
    echo -e "\n"
  else
    echo -e "  $1 is already installed.\n"
  fi
}

# Install HAProxy using the install function
install haproxy

## Configure HAProxy Settings

echo -e "\nConfiguring HAProxy...\n"

# Backup default configuration (silent mode)
sudo cp /etc/haproxy/haproxy.cfg haproxy_default.backup

# Define HAProxy configuration (round-robin)
server_config=\
"
defaults
  mode http
  timeout client 15s
  timeout connect 10s
  timeout server 15s
  timeout http-request 10s

frontend aciel-tech-frontend
  bind *:80
  default_backend aciel-tech-backend

backend aciel-tech-backend
  balance roundrobin
  server 308421-web-01 54.237.217.113:80 check
  server 308421-web-02 18.204.7.152:80 check
"

# Write configuration to file (suppress output, no truncation)
echo "$server_config" | sudo dd status=none of=/etc/haproxy/haproxy.cfg

# Enable HAProxy startup via init script (silent mode)
echo "ENABLED=1" | sudo dd status=none of=/etc/default/haproxy

echo -e "Configured HAProxy for round-robin load balancing between web-01 and web-02.\n"

## Start or Restart HAProxy Service

# Check if HAProxy is running
if [[ $(pgrep -c haproxy) -le 0 ]]; then
  # Start HAProxy if not running
  sudo service haproxy start
else
  # Restart HAProxy if already running
  sudo service haproxy restart
fi
